name: Windows Build

on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev
      - master

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        buildType: [Debug, Release]
        unityBuild: [OFF]
        #include:
        #    - buildType: Debug
        #      unityBuild: ON
    steps:
    - uses: actions/checkout@v2
    
    - name: cache-vulkansdk
      id: cache-vulkansdk
      uses: actions/cache@v1
      with:
        path: "VulkanSDK"
        key: VulkanSDK-1.2.162.0-Installer
        
    - name: Setup Vulkan SDK
      if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/1.2.162.0/windows/VulkanSDK-1.2.162.0-Installer.exe?Human=true -OutFile VulkanSDK-1.2.162.0-Installer.exe
        7z x -aoa ./VulkanSDK-1.2.162.0-Installer.exe -oVulkanSDK
        Remove-Item .\VulkanSDK\Demos, .\VulkanSDK\Samples, .\VulkanSDK\Third-Party, .\VulkanSDK\Tools, .\VulkanSDK\Tools32, .\VulkanSDK\Bin32, .\VulkanSDK\Lib32 -Recurse

    - name: Install conan
      run: |
        python -m pip install wheel 
        python -m pip install conan 

    - name: Configure CMake
      run: |
        $env:Python_ROOT_DIR="C:/hostedtoolcache/windows/Python/3.9.6/x64"
        $env:VULKAN_SDK="$(pwd)/VulkanSDK"
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.buildType}} -DCMAKE_UNITY_BUILD=${{matrix.unityBuild}} -DUNITY_BUILD_BATCH_SIZE=999999
  
    - name: Build
      run: |
        cmake --build ${{github.workspace}}/build --config ${{matrix.buildType}} --parallel

#    - name: Run tests
#      working-directory: ${{github.workspace}}/build/bin
#      run: |
#        ./GVKTest.exe --gtest_filter=Empty.*:RenderGraphPassTest.*
