name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
  
    - name: Vulkan SDK key
      run: wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
      
    - name: Vulkan SDK
      run: sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-bionic.list http://packages.lunarg.com/vulkan/lunarg-vulkan-bionic.list
      
    - name: apt update
      run: sudo apt update
    
    - name: Install wheel
      run: python3 -m pip install wheel 
      
    - name: Install conan
      run: python3 -m pip install conan 
      
    - name: Create conan profile
      run: conan profile new default --detect --force
      
    - name: C++11 ABI
      run: conan profile update settings.compiler.libcxx=libstdc++11 default

    - name: System dependencies
      run: sudo apt install ninja-build python3-setuptools python3-venv libgl1-mesa-dev xorg-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-xinerama0-dev
  
    - name: Vulkan SDK install
      run: sudo apt install vulkan-sdk
      
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_UNITY_BUILD=ON

    - name: cd
      # Build your program with the given configuration
      run: cd ${{github.workspace}}/build
      
    - name: Build
      # Build your program with the given configuration
      run: ninja .

      
